{"version":3,"sources":["components/card.js","index.js"],"names":["CharacterCard","props","character","className","style","backgroundImage","image","name","app","document","getElementById","App","state","nextPage","loading","error","data","results","fetchCharacter","a","setState","fetch","response","json","info","concat","this","message","map","id","onClick","React","Component","ReactDOM","render"],"mappings":"iRAGe,SAASA,EAAcC,GAAQ,IACpCC,EAAcD,EAAdC,UACR,OACE,qBAAKC,UAAU,gBAAgBC,MAAO,CAAEC,gBAAgB,OAAD,OAASH,EAAUI,MAAnB,MAAvD,SACE,qBAAKH,UAAU,gCAAf,SACGD,EAAUK,SCJnB,IAAMC,EAAMC,SAASC,eAAe,OAE9BC,E,4MACJC,MAAQ,CACNC,SAAU,EACVC,SAAS,EACTC,MAAO,KACPC,KAAM,CACJC,QAAS,K,EAObC,e,sBAAiB,8BAAAC,EAAA,6DACf,EAAKC,SAAS,CAAEN,SAAS,EAAMC,MAAO,OADvB,kBAGUM,MAAM,kDAAD,OAAmD,EAAKT,MAAMC,WAH7E,cAGPS,EAHO,gBAIMA,EAASC,OAJf,OAIPP,EAJO,OAMb,EAAKI,SAAS,CACZN,SAAS,EACTE,KAAM,CACJQ,KAAMR,EAAKQ,KACXP,QAAS,GAAGQ,OAAO,EAAKb,MAAMI,KAAKC,QAASD,EAAKC,UAEnDJ,SAAU,EAAKD,MAAMC,SAAW,IAZrB,kDAeb,EAAKO,SAAS,CACZN,SAAS,EACTC,MAAM,EAAD,KAjBM,0D,kEAHfW,KAAKR,mB,+BAwBG,IAAD,OACP,OAAIQ,KAAKd,MAAMG,MACP,UAAN,OAAiBW,KAAKd,MAAMG,MAAMY,SAGlC,qBAAKxB,UAAU,YAAf,SACE,sBAAKA,UAAU,MAAf,UACE,2DACA,6BACGuB,KAAKd,MAAMI,KAAKC,QAAQW,KAAI,SAAA1B,GAAS,OACpC,6BACE,cAACF,EAAD,CAAeE,UAAWA,KADnBA,EAAU2B,SAMtBH,KAAKd,MAAME,SACV,qBAAKX,UAAU,SAAf,SACE,4DAIFuB,KAAKd,MAAME,SACX,wBAAQgB,QAAS,kBAAM,EAAKZ,kBAA5B,mC,GAzDMa,IAAMC,WAiExBC,IAASC,OAAO,cAAC,EAAD,IAAS1B,K","file":"static/js/main.ad994fa7.chunk.js","sourcesContent":["import React from 'react'\r\n\r\n\r\nexport default function CharacterCard(props) {\r\n  const { character } = props\r\n  return (\r\n    <div className=\"CharacterCard\" style={{ backgroundImage: `url(${character.image})` }}>\r\n      <div className=\"CharacterCard__name-container\" >\r\n        {character.name}\r\n      </div>\r\n    </div>\r\n  )\r\n}","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css'\nimport CharacterCard from './components/card'\nconst app = document.getElementById('app');\n\nclass App extends React.Component {\n  state = {\n    nextPage: 1,\n    loading: true,\n    error: null,\n    data: {\n      results: [],\n    },\n  }\n  componentDidMount() {\n    this.fetchCharacter()\n  }\n\n  fetchCharacter = async () => {\n    this.setState({ loading: true, error: null })\n    try {\n      const response = await fetch(`https://rickandmortyapi.com/api/character?page=${this.state.nextPage}`)\n      const data = await response.json()\n\n      this.setState({\n        loading: false,\n        data: {\n          info: data.info,\n          results: [].concat(this.state.data.results, data.results)\n        },\n        nextPage: this.state.nextPage + 1,\n      })\n    } catch (error) {\n      this.setState({\n        loading: false,\n        error: error,\n      })\n    }\n  }\n  render() {\n    if (this.state.error) {\n      return `Error: ${this.state.error.message}`\n    }\n    return (\n      <div className=\"container\">\n        <div className=\"App\">\n          <h1>Rick and Morty Characters</h1>\n          <ul>\n            {this.state.data.results.map(character => (\n              <li key={character.id}>\n                <CharacterCard character={character} />\n              </li>\n            ))}\n          </ul>\n\n          {this.state.loading && (\n            <div className=\"loader\">\n              <h1>Loading, please wait...</h1>\n            </div>\n          )}\n\n          {!this.state.loading && (\n            <button onClick={() => this.fetchCharacter()}>Load more!!!</button>\n          )}\n        </div>\n      </div>\n    )\n  }\n}\n\nReactDOM.render(<App />, app)\n\n"],"sourceRoot":""}